version: "3.9"

services:
  api:
    build: .
    container_name: mf_api
    ports:
      - "8000:8000"
    environment:
      # Pass API key via environment variable or override config.yaml
      - ALPHAVANTAGE_API_KEY=${ALPHAVANTAGE_API_KEY:-"Your own API Key"}
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./mlruns:/app/mlruns
    command: ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8000"]

  streamlit:
    build: .
    container_name: mf_frontend
    depends_on:
      - api
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8000
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./mlruns:/app/mlruns
    command: ["streamlit", "run", "frontend/app.py", "--server.port", "8501", "--server.address", "0.0.0.0"]

  # Optional: add Kafka and Zookeeper for streaming ingestion
  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  # kafka:
  #   image: bitnami/kafka:latest
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
  #     - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

  # Optional: MLflow UI
  # mlflow:
  #   image: ghcr.io/mlflow/mlflow:v2.4.0
  #   container_name: mlflow
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./mlruns:/mlflow/mlruns
  #   command: ["mlflow", "server", "--backend-store-uri", "/mlflow/mlruns", "--host", "0.0.0.0"]

  # Optional: Airflow (requires separate initialisation)
  # airflow:
  #   image: apache/airflow:2.6.0
  #   container_name: airflow
  #   depends_on:
  #     - api
  #   environment:
  #     - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  #     - AIRFLOW__CORE__LOAD_EXAMPLES=False
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./airflow_dag.py:/opt/airflow/dags/airflow_dag.py
  #   command: ["bash", "-c", "airflow db upgrade && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && airflow webserver"]
